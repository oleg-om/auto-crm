

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: auto-crm-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: chat
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - auto-crm-network

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: docker/PROD.Dockerfile
      target: nodeServer
    container_name: auto-crm-app
    restart: always
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://app_user:app_password@mongodb:27017/chat?authSource=chat
      - PORT=8081
      - SECRET_JWT=your-super-secret-jwt-key-change-this-in-production
      - ENABLE_SOCKETS=true
      - MODE=production
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - auto-crm-network
    volumes:
      - ./uploads:/app/uploads
      - env_file:/app/config/.env:ro

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: docker/PROD.Dockerfile
      target: webServer
    container_name: auto-crm-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - auto-crm-network
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/domain.conf:/etc/nginx/conf.d/domain.conf:ro

volumes:
  mongodb_data:
    driver: local
  env_file:
    driver: local

networks:
  auto-crm-network:
    driver: bridge
